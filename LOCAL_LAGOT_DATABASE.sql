
-- CREACION DE LA BASE DE DATOS DEL LOCAL
CREATE DATABASE  
IF NOT EXISTS LOCAL_LAGOT CHARACTER SET UTF8mb4 COLLATE utf8mb4_general_ci;

USE LOCAL_LAGOT;


-- Creacion de Tablas de Usuarios y Log INS

-- TABLA DE USUARIOS
-- SE LES COLOCA el PREFIJO ADMIN POR ORGANIZACION DE LAS TABLAS

CREATE TABLE IF NOT EXISTS admin_usuarios
(	idUsuario INT NOT NULL PRIMARY KEY AUTO_INCREMENT	,
	idTipoDeUsuario TINYINT NOT NULL,
	nombre VARCHAR(50) NOT NULL,
	apellido VARCHAR(50) NOT NULL,
	email VARCHAR(50) NOT NULL,
	password BLOB NOT NULL);

-- TABLA DE TIPOS DE USUARIOS

CREATE TABLE IF NOT EXISTS admin_tipoDeUsuario
(	idTipoDeUsuario TINYINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	tipoDeUsuario VARCHAR(50) NOT NULL);

-- TABLA DE INGRESOS AL SISTEMA

CREATE TABLE IF NOT EXISTS admin_ingresoSistema
(	idLog INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	idUsuario INT NOT NULL,
	fechaHoraLog DATETIME NOT NULL);


-- AGREGADO DE FK y CONSTRAINTS

ALTER TABLE	admin_usuarios
ADD CONSTRAINT FK_tipoDeUsuario_ID FOREIGN KEY (idTipoDeUsuario)
REFERENCES admin_tipoDeUsuario(idTipoDeUsuario);

ALTER TABLE	admin_ingresoSistema
ADD CONSTRAINT FK_idUsuario_ID FOREIGN KEY (idUsuario)
REFERENCES admin_usuarios(idUsuario);


-- CREACION DE TABLAS PARA EL SISTEMA DE LAGOT

-- CREACION TABLA PRODUCTOS
#1 TABLA DE PRODUCTOS
CREATE TABLE IF NOT EXISTS producto
(	idProducto INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	idProveedor INT NOT NULL,
	idCategoria TINYINT NOT NULL,
	idTemporada TINYINT NOT NULL,
	idTarget TINYINT NOT NULL,
	precioCompra FLOAT NOT NULL,
	precioDeVenta FLOAT NOT NULL,
	marca VARCHAR(50),
	talle VARCHAR(50) NOT NULL,
	cantidad SMALLINT,
	foto MEDIUMBLOB,
	garantia BOOLEAN,
	plazoDeGarantia DATE,
	devolucion BOOLEAN);

#2 TABLA DE CATEGORIA
CREATE TABLE IF NOT EXISTS categoria
(	idCategoria TINYINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	categoria VARCHAR(50) NOT NULL);

#3 TABLA TEMPORADA
CREATE TABLE IF NOT EXISTS temporada
(	idTemporada TINYINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	temporada VARCHAR(50));

#4 TABLA TARGET
CREATE TABLE IF NOT EXISTS target
(	idTarget TINYINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	target VARCHAR(50));

#5 TABLA PROVEEDOR
CREATE TABLE IF NOT EXISTS proveedor
(	idProveedor INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	cuit VARCHAR(13) NOT NULL,
	fechaHoraDeAlta DATETIME NOT NULL,
	nombre VARCHAR(50),
	telefono VARCHAR(20),
	direccion VARCHAR(100),
	email VARCHAR(100));

#5 TABLA DEVOLUCION
CREATE TABLE IF NOT EXISTS devolucion
(	idDevolucion INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	idProducto INT NOT NULL,
	idFactura INT NOT NULL,
	idMotivo TINYINT NOT NULL,
	valorDevolucion FLOAT NOT NULL,
	fechaHoraDevolucion DATETIME NOT NULL);


#4 TABLA MOTIVO
CREATE TABLE IF NOT EXISTS motivo
(	idMotivo TINYINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	nombreMotivo VARCHAR(50) NOT NULL);


#7 TABLA CLIENTE
CREATE TABLE IF NOT EXISTS cliente
(	idCliente INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	idTipoDeCliente TINYINT NOT NULL,
	razonSocial VARCHAR(100),
	nombre VARCHAR(50) NOT NULL,
	apellido VARCHAR(50) NOT NULL,
	direccion VARCHAR(100) NOT NULL,
	fechaDeNacimiento DATE,
	fechaHoraDeAlta DATETIME NOT NULL,
	password BLOB NOT NULL,
	cuit VARCHAR(13),
	foto MEDIUMBLOB,
	dni VARCHAR(11) NOT NULL,
	email VARCHAR(50),
	codigoPostal VARCHAR(4));


#8 TABLA TIPO DE CLIENTE
CREATE TABLE IF NOT EXISTS tipoDeCliente
(	idTipoDeCliente TINYINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	tipoDeCliente VARCHAR(50) NOT NULL);

#9 TABLA TIPO DE VENDEDOR
CREATE TABLE IF NOT EXISTS vendedor
(	idVendedor SMALLINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	nombre VARCHAR(50) NOT NULL,
	apellido VARCHAR(50) NOT NULL,
	dni VARCHAR(11),
	email VARCHAR(100),
	password BLOB NOT NULL,
	direccion VARCHAR(100),
	fechaDeIngreso DATE NOT NULL,
	fechaDeNacimiento DATE,
	salario FlOAT NOT NULL);


#10 TABLA PEDIDO
CREATE TABLE IF NOT EXISTS pedido
(	idPedido INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	idCliente INT NOT NULL,
	idVendedor SMALLINT NOT NULL,
	fechaHoraPedido DATETIME NOT NULL);

#11 TABLA PRODUCTO PEDIDO
CREATE TABLE IF NOT EXISTS productoPedido
(	idProductoPedido INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	idPedido INT NOT NULL,
	idProducto INT NOT NULL,
	precio FLOAT NOT NULL,
	fechaHora DATETIME NOT NULL);


#12 TABLA FACTURA
CREATE TABLE IF NOT EXISTS factura
(	idFactura INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	idMedioDePago TINYINT NOT NULL,
	idPedido INT NOT NULL,
	fechaHoraFacturacion DATETIME,
	descripcion VARCHAR(50));


#13 TABLA MEDIO DE PAGO
CREATE TABLE IF NOT EXISTS tipoDeCliente
(	idMedioDePago TINYINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	medioDePago VARCHAR(50) NOT NULL);

#14 TABLA ENVIO
CREATE TABLE IF NOT EXISTS envio
(	idEnvio INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	idFactura INT NOT NULL,
	idEmpresa TINYINT NOT NULL,
	idStatusDeEntrega TINYINT NOT NULL,
	fechaHoraDeEnvio DATETIME NOT NULL,
	idTracking VARCHAR(100),
	direccionDeEnvio VARCHAR(100) NOT NULL);


#15 TABLA STATUS DE ENTREGA
CREATE TABLE IF NOT EXISTS statusDeEntrega
(	idStatusDeEntrega TINYINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	statusDeEntrega VARCHAR(50) NOT NULL);


#16 TABLA LOGISTICA
CREATE TABLE IF NOT EXISTS logistica
(	idEmpresa TINYINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	idTipoDeEnvio TINYINT NOT NULL,
	nombreEmpresa VARCHAR(100) NOT NULL,
	maximoCarga MEDIUMINT);

#17 TABLA TIPO DE ENVIO
CREATE TABLE IF NOT EXISTS tipoDeEnvio
(	idTipoDeEnvio TINYINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	tipoDeEnvio VARCHAR(50) NOT NULL);




-- CREACION DE LAS CONSTRAINT Y FK DE CADA TABLA RESPECTIVAMENTE

-- CREACION EN LA TABLA PRODUCTO:
LAS FK SON: 
		FK	idProveedor -> 	TABLA: 	proveedor
		FK	idCategoria -> 	TABLA:	categoria
		FK	idTemporada ->	TABLA:	temporada
		FK	idTarget	->	TABLA:	target

ALTER TABLE	producto
ADD 
CONSTRAINT FK_Proveedor_ID FOREIGN KEY (idProveedor)
REFERENCES proveedor(idProveedor);


ALTER TABLE	producto
ADD 
CONSTRAINT FK_Categoria_ID FOREIGN KEY (idCategoria)
REFERENCES categoria(idCategoria);

ALTER TABLE	producto
ADD 
CONSTRAINT FK_Temporada_ID FOREIGN KEY (idTemporada)
REFERENCES temporada(idTemporada);

ALTER TABLE	producto
ADD 
CONSTRAINT FK_Target_ID FOREIGN KEY (idTarget)
REFERENCES target(idTarget);
